#******************************************************************#
# Sample Makefile.config.  Be sure to edit this to your likings    #
# and copy it to Makefile.config.                                  #
#******************************************************************#

#------------------------------------------------------------------#
# Select the target system                                         #
# (define your own, if needed!)                                    #
#------------------------------------------------------------------#
#SYSTEM =	"Standard SQL"
SYSTEM =	"Standard OpenMP"
#SYSTEM =	"Standard MPI"
#SYSTEM =	"Standard MPI+OpenMP"
#SYSTEM =	"Debug"

#------------------------------------------------------------------#
# DEFINEFLAGS                                                      #
#------------------------------------------------------------------#

# The300 test data
#DEFINEFLAGS = -DMULTIMASS -DGAS_PARTICLES -DAHFdmfocus

# write information into an ASCII file
DEFINEFLAGS	+=	-DWRITE_ASCII 

# Cosmic Web as given by Hessian of density field (results will be written into the same *binary* output file!)
DEFINEFLAGS	+=      -DDWEB #-DDWEB_MHD #-> the latter switches on Weiguang's implementation of 2nd order derivatives (not tested by AK)

# Cosmic Web as given by gravitational potential (results will be written into the same *binary* output file!)
#DEFINEFLAGS	+=	 -DPWEB #-DPWEB_MHD #-> the latter switches on Weiguang's implementation of 2nd order derivatives (not tested by AK)

# you can have Cweb dump information about number of web elements as defined by this threshold (note, this is just information to stderr, not affecting any output files)
#DEFINEFLAGS	+=      -DLAMBDA_TH=0.44

# if you want to use H(z) as the normalisation of the velocity shear tensore, switch this on
DEFINEFLAGS	+=      -DHUBBLE_Z

# reading in a pre-calculated grid
#DEFINEFLAGS	+=   -DREAD_GRIDDATA       #This will readin mesh data directly, no need for simulation readding.

# writes all density values to a binary file for later use (see READ_GRIDDATA); the values are written *before* smoothing the fields!
DEFINEFLAGS	+=   -DWRITE_GRIDDATA
#DEFINEFLAGS +=   -DWRITE_GRIDDATA_TERMINATE

# if you have FFT3 installed, you might use that one (set the paths below correctly to your installation)
#DEFINFLAGS  += -DUSE_FFTW3

# assignment scheme (pick one, if non is picked, TSC will be used)
#DEFINEFLAGS	+=   -DNGP
#DEFINEFLAGS	+=   -DCIC
DEFINEFLAGS	+=   -DTSC


#--------------------------------------------------for simulation snapshots
#DEFINEFLAGS	+=   -DBYTESWAP  #If you need to swap big-little endian
#DEFINEFLAGS	+=   -DMULTIMASS -DGAS_PARTICLES   #Not sure if -DGAS_PARTICLES must be here....
#DEFINEFLAGS	+=   -DAHFptfocus=4  #If you only need one specific particle type.

# Cweb tests
#------------
#DEFINEFLAGS  = -DGADGET2 -DGADGET_LUNIT_KPC -DMULTIMASS -DGAS_PARTICLES -DBYTESWAP
#DEFINEFLAGS	=	-DGADGET -DGADGET_LUNIT_KPC

#------------------------------------------------------------------#
# Set environment for the system                                   #
#------------------------------------------------------------------#
LIB_HDF5        =       -L/Users/aknebe/bin/hdf5/lib -lhdf5
INC_HDF5        =       -I/Users/aknebe/bin/hdf5/include -DH5_USE_16_API
LIB_FFTW3	      =	      -L/Users/aknebe/bin/fftw/fftw-3/lib
INC_FFTW3	      =	      -I/Users/aknebe/bin/fftw/fftw-3/include


ifeq ($(SYSTEM), "Standard SQL")
	CC         	=	gcc -fopenmp
	FC 	      	=	gfortran
	OPTIMIZE	  =	-O2
	CCFLAGS		  =	${INC_FFTW3} ${INC_DHF5}
	LNFLAGS		  =	${LIB_FFTW3} ${LIB_HDF5} -lsqlite3
	DEFINEFLAGS	+=	-DWITH_OPENMP -DAHF_SQL
	MAKE		=	make
endif

ifeq ($(SYSTEM), "Standard OpenMP")
	CC         	=	gcc -fopenmp
	FC 	      	=	gfortran
	OPTIMIZE	=	-O2
  CCFLAGS      =  ${INC_FFTW3} ${INC_DHF5}
  LNFLAGS      =  ${LIB_FFTW3} ${LIB_HDF5}
	DEFINEFLAGS	+=	-DWITH_OPENMP
	MAKE		=	make
endif

ifeq ($(SYSTEM), "Standard MPI")
	CC         	=	mpicc -Wall -W
	FC         	=	mpif90
	OPTIMIZE	=	-O2
  CCFLAGS      =  ${INC_FFTW3} ${INC_DHF5}
  LNFLAGS      =  ${LIB_FFTW3} ${LIB_HDF5}
	DEFINEFLAGS	+=	-DWITH_MPI
	MAKE		=	make
endif

ifeq ($(SYSTEM), "Standard MPI+OpenMP")
	CC         	=	mpicc -Wall -W -fopenmp
	FC         	=	g77
	OPTIMIZE	=	-O2
  CCFLAGS      =  ${INC_FFTW3} ${INC_DHF5}
  LNFLAGS      =  ${LIB_FFTW3} ${LIB_HDF5}
	DEFINEFLAGS	+=	-DWITH_MPI -DWITH_OPENMP
	MAKE		=	make
endif

ifeq ($(SYSTEM), "Debug")
	CC         	=	gcc -g
	FC 	      	=	g95
	OPTIMIZE	=	-O0
  CCFLAGS      =  ${INC_FFTW3} ${INC_DHF5}
  LNFLAGS      =  ${LIB_FFTW3} ${LIB_HDF5}
	DEFINEFLAGS	+=
	MAKE		=	make
endif
